async function exportBattlePlanToPDF() {
  if (!currentBPId || !currentBPDate) {
    toast("No active BattlePlan to export", "error");
    return;
  }

  if (typeof window.jspdf === "undefined") {
    await new Promise((resolve, reject) => {
      const script = document.createElement("script");
      script.src = "https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js";
      script.onload = resolve;
      script.onerror = reject;
      document.body.appendChild(script);
    });
  }

  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();

  // ================= HEADER =================
  doc.setFillColor(41, 128, 185);
  doc.rect(0, 0, 210, 20, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(18);
  doc.text("BATTLE PLAN", 14, 13);
  doc.setFontSize(11);
  doc.text(`Date: ${currentBPDate}`, 160, 13);

  doc.setTextColor(0, 0, 0);
  let y = 30;

  // ================= TASKS =================
  doc.setFontSize(16);
  doc.setTextColor(44, 62, 80);
  doc.text("Tasks", 14, y);
  y += 6;

  doc.setFontSize(11);
  const tasks = [...taskList.querySelectorAll(".task-item")];

  tasks.forEach((task, i) => {
    const text = task.querySelector(".task-text").textContent;
    const category = task.querySelector(".task-category")?.textContent || "";
    const checked = task.querySelector(".task-checkbox").checked;

    const fullText = `${text} ${category}`;

    const wrapped = doc.splitTextToSize(fullText, 170); // wrap to fit width

    if (i % 2 === 0) {
      doc.setFillColor(245, 245, 245);
      doc.rect(10, y - 4, 190, 8 * wrapped.length, "F");
    }

    doc.setDrawColor(41, 128, 185);
    doc.rect(14, y - 3, 4, 4);
    if (checked) {
      doc.setDrawColor(39, 174, 96);
      doc.setLineWidth(0.6);
      doc.line(14, y - 3, 18, y + 1);
      doc.line(18, y - 3, 14, y + 1);
    }

    doc.setTextColor(0, 0, 0);
    doc.text(wrapped, 22, y + 1);

    y += wrapped.length * 6 + 4;

    if (y > 270) {
      doc.addPage();
      y = 20;
    }
  });

  // ================= QUOTAS =================
  y += 8;
  doc.setFontSize(16);
  doc.setTextColor(44, 62, 80);
  doc.text("Quotas", 14, y);
  y += 6;

  const quotas = [...quotaList.querySelectorAll(".quota-row")];
  doc.setFontSize(11);
  doc.setDrawColor(200, 200, 200);
  doc.line(14, y, 196, y);
  y += 4;

  quotas.forEach((q, i) => {
    const name = q.querySelector(".quota-name").textContent;
    const done = q.querySelector(".quota-done").value;
    const needed = q.querySelector(".quota-needed").value;

    if (i % 2 === 0) {
      doc.setFillColor(250, 250, 250);
      doc.rect(14, y - 4, 182, 8, "F");
    }

    doc.text(name, 18, y + 1);
    doc.text(`${done} / ${needed}`, 170, y + 1, { align: "right" });

    y += 10;
    if (y > 270) {
      doc.addPage();
      y = 20;
    }
  });

  // ================= FOOTER =================
  doc.setFillColor(41, 128, 185);
  doc.rect(0, 287, 210, 10, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(8);
  doc.text("Generated by Knowledge | Toolbox Program", 105, 293, { align: "center" });

  doc.save(`BattlePlan-${currentBPDate}.pdf`);
}

const exportPdfBtn = document.getElementById("export-pdf-btn");
exportPdfBtn.addEventListener("click", exportBattlePlanToPDF);
